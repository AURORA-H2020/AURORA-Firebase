rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Disallow any read or write which are not explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // Access-Rules for countries collection and its subcollections
    match /countries/{countryId} {
        // Allow read if authenticated
        allow read: if request.auth != null;
        // Deny Write (Create, Update, Delete)
        allow write: if false;

        // Access-Rules for cities subcollection
        match /cities/{cityId} {
          // Allow read if authenticated
          allow read: if request.auth != null;
          // Deny Write (Create, Update, Delete)
          allow write: if false;
        }
    }

    match /_export-user-data-blacklisted-users/{userId} {
        allow write: if get(/databases/$(database)/documents/user-roles/$(request.auth.uid)).data.isAdmin == true
        allow read: if get(/databases/$(database)/documents/user-roles/$(request.auth.uid)).data.isAdmin == true;
    }

    match /user-roles/{userId} {
        // Allow single read if auth uid matches with the userId
        allow get: if request.auth != null && request.auth.uid == userId;
        // Deny list
        allow list: if false;
        // Deny Write (Create, Update, Delete)
        allow write: if false;
    }

    match /pv-plants/{pvPlantId} {
        // Allow read for all users
        allow read: if true;
        // Deny Write (Create, Update, Delete)
        allow write: if false;
        match /data/{pvDataId} {
          // Allow read if authenticated
          allow read: if request.auth != null;
          // Deny Write (Create, Update, Delete)
          allow write: if false;
        }
    }

    // Access-Rules for users collection and its subcollections
    match /users/{userId} {
        // Allow single read if auth uid matches with the userId
        allow get: if request.auth != null && request.auth.uid == userId;
        // Deny list
        allow list: if false;
        // Allow Create if auth uid matches with the userId
        allow create: if request.auth != null && request.auth.uid == userId;
        // Allow Update if auth uid matches with the userId
        allow update: if request.auth != null && request.auth.uid == userId;
        // Deny delete as an user documents exclusively gets deleted by a cloud function
        allow delete: if false;

        // Access-Rules for consumptions subcollection
        match /consumptions/{consumptionID} {
          // Allow read and write if auth uid matches with the userId
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }

        // Access-Rules for consumption-summaries subcollection
        match /consumption-summaries/{consumptionSummaryID} {
          // Allow read if auth uid matches with the userId
          allow read: if request.auth != null && request.auth.uid == userId;
          // Deny write
          allow write: if false
        }

        match /recurring-consumptions/{recurringConsumptionID} {
          // Allow read and write if auth uid matches with the userId
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }

        // Access-Rules for pv-investments subcollection
        match /pv-investments/{pvInvestmentID} {
          // Allow read and write if auth uid matches with the userId
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }

        // Access-Rules for recommendations subcollection
        match /recommendations/{recommendationID} {
          // Allow read and write if auth uid matches with the userId
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
    }

  }
}